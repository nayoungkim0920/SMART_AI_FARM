1) 영상출력하기

import cv2

#초당 30프레임 이미지로 구성
#ret : 잘읽어왔는지 True, False
#frame : 1프레임의 이미지 저장

cap = cv2.VideoCapture(0)

while True:
    #동영상에서 이미지를 프레임 단위로 읽어옴
    ret, frame = cap.read()

    if not ret: #파일에 문제가 있거나 동영상이 끝났을 때
        print('이미지 읽기 실패 또는 모두 읽음')
        #비디오 종료
        cap.release()
        #윈도우 실행창 종료
        cv2.destroyAllWindows()
        #반복문 종료
        break

    #동영상을 잘 읽어왔을 때
    cv2.imshow('video', frame)

    #한장의 사진을 0.033초 동안 띄움
    k = cv2.waitKey(33)    

    #1을 누르면 동영상 종료
    if k == 49: #ASCII코드(1)
        print('동영상 종료')
        cap.release()
        cv2.destroyAllWindows()
        break


2) 녹화하기 #1:종료, 2:녹화시작, 3:녹화종료

import cv2

# 녹화하기
try:
    cap = cv2.VideoCapture(0)
    print("동영상 읽기 성공")
except:
    print("동영상 읽기 실패")

# 녹화 설정(녹화하기 위해서는 설정 작업 필요) 
fps = 30.0 # 녹화할 프레임 수
width = int(cap.get(3)) # 녹화 영상의 가로 크기
height = int(cap.get(4)) # 녹화 영상의 세로 크기

# 코덱 설정(동영상을 어떤 형식으로 압출할 것인지)
# MPEG > mp4
# DIVX > avi
fcc = cv2.VideoWriter_fourcc(*'DIVX')

# 녹화 저장 설정
# cv2.VideoWriter(저장할 파일명, 코덱, 프레임 수, 동영상 크기)
out= cv2.VideoWriter('out.avi', fcc, fps, (width,height))

record = False

while True:
    ret, frame = cap.read()
    
    if not ret : 
        print("이미지 읽기 실패 또는 모두 읽음") 
        cap.release()
        cv2.destroyAllWindows()
        break
        
    cv2.imshow('animation',frame)
    out.write(frame)
    
    k = cv2.waitKey(33)
    
    if k == 49:
        print("동영상 종료")
        cap.release()
        cv2.destroyAllWindows()
        break
        
    if k == 50 : # 녹화 시작 버튼(2를 눌렀을 시)
        record = True
        print("녹화 시작")
        
    if record :
        out.write(frame)
        
    if k == 51:
        # 녹화 종료
        out.release()
        print("녹화 종료")

3) 캡쳐하기
import cv2
import os

# Open the video file
cap = cv2.VideoCapture('out.avi')

# Check if the video file was successfully opened
if not cap.isOpened():
    print('Failed to open video file')
    exit()

print('Video file opened successfully')

# Create directory for saving images if it doesn't exist
save_dir = './cap_img/'
os.makedirs(save_dir, exist_ok=True)

num = 0  # Counter for image filenames

while True:
    ret, frame = cap.read()

    if not ret:
        print('Failed to read frame or end of video')
        break

    cv2.imshow('video', frame)

    k = cv2.waitKey(33)

    if k == ord('q'):  # Press 'q' to exit
        print('Exiting...')
        break

    if k == ord('s'):  # Press 's' to save frame as an image
        print('Saving frame as image...')
        image_path = os.path.join(save_dir, 'cap_img{}.jpg'.format(num))
        success = cv2.imwrite(image_path, frame, params=[cv2.IMWRITE_JPEG_PROGRESSIVE, 0])
        if success:
            print('Image saved as', image_path)
            num += 1
        else:
            print('Failed to save image')

# Release VideoCapture and close OpenCV windows
cap.release()
cv2.destroyAllWindows()

4) 픽셀값읽기변경
import cv2

#픽셀값 읽기 : 가로, 세로 값을 입력하면 해당위치의 픽셀값을 출력함
img = cv2.imread('rudy.jpg')

#이미지에서 100, 100의 픽셀값을 출력
img[100,100]

#픽셀값 변경 : 해당 위치에 BGR값을 대입해주면됨
img[100, 300] = [0, 0, 0]
img[101, 300] = [0, 0, 0]
img[100, 301] = [0, 0, 0]
img[101, 301] = [0, 0, 0]

cv2.imshow('dog', img)
cv2.waitKey(0)
cv2.destroyAllWindows()


5) 이미지영역자르기

import cv2

img = cv2.imread('rudy.jpg')

print(img.shape)
print(img.size)

roi_img = img[150:300, 50:200]
cv2.imshow('dog_face', roi_img)

cv2.waitKey(0)
cv2.destroyAllWindows()


6) 이미지에 도형그리기고 텍스트출력하기

import cv2

#이미지에 원그리기 : cv2.circle()
#이미지에 사각형 그리기 : 
#cv2.rectangle(배경이미지,좌상단점좌표,우하단점좌표, 색상, 선두께)
#이미지에 텍스트 입력하기 :
#cv2.putText(배경이미지,출력내용,출력시작좌표,폰트,크기,색상,굵기) 

img = cv2.imread('rudy.jpg')
img = cv2.rectangle(img, (50,150),(200,300),(0,0,255),3)
img = cv2.putText(img, 'Dog', (50,140), cv2.FONT_HERSHEY_SIMPLEX,
                  0.5, (255,0,0), 2)
cv2.imshow('dog', img)

cv2.waitKey(0)
cv2.destroyAllWindows()
