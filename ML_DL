1.프레임워크

1) TensorFlow
구글
그래프기반의 계산을 지원, 
대규모 분산학습, 모델 배포, 모바일 및 임베디드 시스템에 적합한
TensorFlow Lite등 다양한 기능 제공

2) PyTorch
페이스북
동적 계산 그래프를 사용하여 직관적인 디버깅과 유연한 모델 설계를 지원

3) Keras
딥러닝 모델을 쉽게 설계하고 프로토타입을 만들 수 있는 고수준 API이다.
TensorFlow 2.X와 함께 기본 API로 사용되며
PyTorch와도 호환된다.

4) scikit-learn
파이썬 기반의 간단하고 효과적인 머신러닝 라이브러리
주로 전통적인 머신러닝 작업에 사용

5) Caffe2
딥러닝 및 기계 학습을 위한 오픈 소스 프레임워크
Torch는 Lua언어로 작성된 프레임워크로, 딥러닝 연구자들과 기업에서 널리 사용된다.
반면 Caffe2는 Facebook에서 개발된 프레임워크로, 유연성과 속도를 강조하며
모바일 및 임베디드 디바이스를 대상으로한 경량화된 모델 배포에 중점을 두고 있다.
둘은 비슷한 목표를 가지고 있지만, 내부적으로는 서로 다른 디자인 구현을가지고 있다.
최근에는 Torch와 Caffe2가 pyTorch라는 통합된 프로젝트로 합쳐졌다.
pTorch는 텐서 연산, 자동 미분 등의 위한 기능을 제공하며, torch의 유연성과
Caffe2 의 성능을 결합하여 하나의 통합된 딥러닝 플랫폼으로 발전시켰다. 

2. 알고리즘
1) Yolo(You Only Look Once)
딥러닝 기반의 객체 검출 알고리즘, 빠르고 정확한 객체 검출을 제공
이미지를 한번의 순전파(Forward Propagation : 인공신경망에서 입력데이터를 신경망을 통해
전달하여 출력을 계산하는 과정)로 전체 이미지를 동시에 처리하여 빠른 속도와 높은 정확도 제공
실시간 객체 검출 및 추적에 널리사용

2) 선형회귀(Linear Regression)
연속형 타겟 변수를 예측하는데 사용

3) 로지스틱회귀(Logistic Regression)
이진 분류 문제에 사용되며, 확률적인 결과 예측

4) 의사결정트리(Decision Trees)
데이터를 여러 개의 분할로 나누어 예측을 수행하는 비파라미터 학습 알고리즘

5) k-최근접이웃(K-Nearest Neighbors, KNN)
데이터 포인트 주변의 이웃들의 다수결로 분류를 수행하는 지도학습 알고리즘

6) k평균 군집화(K-Means Clustering)
데이터를 K개의 클러스터로 그룹화하는 비지도 학습 알고리즘이다.

7) 다층 퍼셉트론(MLP, Multi-layer Perceptron)
인공 신경망의 기본 구조 중 하나로, 여러개의 은닉층을 가진 신경망이다.

8) 합성곱 신경망(CNN, Convolutional Neural Network)
이미지 인식 및 컴퓨터 비전작업에 사용되는 딥러닝 모델

9) 순환 신경망(RNN, Recurrent Neural Network)
순서가 있는 데이터에 대한 모델링에 사용되는 딥러닝 모델
한종류로 LSTM(Long Short-Term Memory:시쿼스 데이터에서 장기의존성 학습하는데 효과적)
주로 시계열 데이터 분석과 자연어 처리에 사용됨

10) 지원 벡터 머신(SVM, Support Vector Machine)
이진 분류 및 회귀분석에 사용되는 지도 학습알고리즘

딥러닝/머신러닝 프레임워크
1) TensorFlow
가장 인기있는 딥러닝 라이브러리 중 하나인 TensorFlow는 Google Brain팀에서 개발했으며
2015년 오픈 소스로 공개되었다. 2세대 머신러닝 시스템으로 불리는 Tensorflow는 Python 기반
라이브러리로, 여러 CPU 및 GPU와 모든 플랫폼, 데스크톱 및 모바일에서 사용할 수 있다.
또한, c++ 및 R과 같은 다른 언어도 지원하며 딥러닝모델을 직접 작성하거나 Keras와 같은 래퍼
라이브러리를 사용하여 직접 작성할 수 있다.

2) Theano
최조의 딥러닝 라이브러리중 하나인 Theano는 Python 기반이며 CPU 및 GPU의 수치 계산에 
매우 유용하다.
Tensorflow와 마찬가지로 Theano는 저수준 라이브러리로, 딥러닝 모델을 직접 만들거나 그 위에
래퍼라이브러리를 사용하여 프로세스를 단순화 할 수 있다. 그러나 다른 확장 학습 프레임워크와
달리 확장성이 뛰어나지 않으며 다중 GPU 지원이 부족하다. 그러나 범용적으로 딥러닝을 할 때 
전 세계의 많은 개발자가 여전히 선택하고 있다.

3) Keras
Theano와 Tensorflow는 매우 훌륭한 딥러닝 라이브러리이지만 직접 사용하여 모델을 만드는 것은
매우 저급수준이기 때문에 어려울 수 있다. 이러한 문제를 해결하기 위해 Keras는 효율적인
신경망 구축을 위한 단순화 된 인터페이스로 개발되었다. Keras는 Theano 또는 Tensorflow에서
작동하도록 구성 할 수 있다. Python으로 작성되었으며, 매우 가볍고 배우기 쉽다.
비교적 새로운 라이브러리 임에도 불구하고 아주 좋은 문서를 가지고 있으며 몇 줄의 코드에서
Keras를 사용하여 신경망을 만들 수 있다.

4) Caffe2
표현 속도 및 모듈성을 염두해 두고 개발된 Caffe는 Berkeley Vision and Learning Center(BVLC)
에서 주로 개발한 최초의 딥러닝 라이브러리 중 하나 이다. 이것은 또한 Python 인터페이스를 가지고
있는 c++라이브러리이며, CNN(Convolutional Neural Networks)을 모델링 할 때 기본 애플리케이션
으로 찾습니다. 이 라이브러리를 사용하면 얻을 수 있는 주요 이점 중 하나는 바로 Caffe Model Zoo에서
미리 훈련된 여러 네트워크를 바로 사용할 수 있다는 것이다. CNN모델링이나 이미지처리 문제 해결에
관심이 있으면 이 라이브러리를 고려해 보십시오. Caffe를 페이스북은 최근 고성능 개방형 학습 모델을
구축할 수있는 유연성을 제공하는 새로운 가벼운 모듈식 딥러닝 프레임워크인 Caffe2를 공개했다.

5) torch
Lua기반의 딥러닝 프레임워크로서 페이스북, 트위터, 구글과 같은 거물들이 사용하고 개발했다.
CUDA는 GPU 처리를 위해 C/C++ 라이브러리와CUDA를 사용한다. 최대한 유연성을 달성하고
모델을 제작하는 과정을 매우 간단하게 만드는 것을 목표로 만들어졌다. 최근 pyTorch라고 불리는
Torch의 Python구현은 인기를 얻었고 빠른 채택을 얻고 있다.

6) Deeplearning4j
java로 개발된 인기 있는 딥러닝 프레임워크이며 다른 JVM언어도 지원한다. 상업, 산업 중심의 분산
딥러닝 플랫폼으로 널리 사용된다. Apache Handoop 및 Apache Spark와 같은 널리 사용되는 
Big Data 도구를 기반으로 구현할 수 있으므로 전체Java생태계의 힘을 결합하여 효율적인 딥러닝을
수행 할 수 있다는 장점이 있다.

7) MxNet
R, Python, C++, Julia와 같은 언어를 지원하는 딥러닝프레임워크 중 하나이다. 
이 언어들 중 어느것을 알고 있다면 편안하게 학습 영역을 쉽게 접근할 수 있기 때문에 유용하다.
백엔드는c++과cuda로 작성되었으며 Theano와 같이 자체메모리를관리할 수 있다. MXnet은 확장성
이좋고 다중 GPU와 컴퓨터로 작업 할 수 있기 때문에대중적이다. 
기업용으로 매우 유용하다.
이것이아마존이 MXNet을 딥러닝을 위한 참조 라이브러리로 사용한 이유 중 하나이기도 하다. 

8) Microsoft Cognitive Toolkit(CNTK)
딥러닝 모델을 교육하기 위한 오픈소스 딥러닝 도구이다. 고도록 최적화되었으며 Python및 c++와 
같은 언어를 지원한다. 효율적인 리소스 활용으로 알려진 Cognitive Toolkit을 활용하여 
효율적인 강화학습 모델 또는 Generative Adversarial Networks(GAN)를 쉽게 구현할 수 있다.
높은 확장성과 성능을 발휘하도록 설계되었으며 여러 시스템에서실행될때 Theano 및 Tensorflow와
같은 다른 툴킷과 비교할 때 높은 성능을 제공한다.

9) Lasagne
최상위에서 실행되는 고급 학습라이브러리이다. 꽤 오래 전부터 있었으며 Theano의 복잡성을
추상화했고 신경망을 구축하고 훈련시키는 데보다 친숙한 인터페이스를 제공하기 위해 개발
python이 필요하며 keras와 공통점이 있다. 차이점은 keras는 더 빠르며 더 나은 문서화가 이루어
진다.

10) BigDL
Apache Spart에 대한 딥러닝 라이브러리로 배포되어 있으며 확장성이 뛰어나다
BigDL의 도움을 받아 Spark 또는 Hadoop 클러스터에서 Spark프로그램으로 직접 작성하여
딥러닝 애플리케이션을 직접 실행할 수 있다. 풍부한 학습지원을 제공하며 인텔의 수학 커널 
라이브러리 MKL을 사용하고 고성능을보장한다. BigDL을 사용하여 사전 훈련된 Torch 또는 Caffe
모델을 Spark에 로드 할 수도 있다. 클러스터에 저장된 대규모 데이터세트에 딥러닝 기능을 추가하려는
경우 사용할 수 있는 매우 유용한 라이브러리 이다.
