//Visual computing
디지털 이미지와 비디오의 생성, 처리, 분석, 시각화를 다루는 
광범위한 연구 및 기술 분야를 의미한다.
이 분야는 컴퓨터 과학, 전자공학, 수학 등의 여러 학문 분야와 밀접하게 관련되어 있으며,
다음과 같은 주요 하위 분야를 포함한다.

1. 컴퓨터 비전(Computer Vision)
컴퓨터가 이미지나 비디오로 부터 의미있는 정보를 추출하고 해석할 수 있게 하는 기술이다.
응용분야로는 얼굴 인식, 객체 검출, 자율 주행 차량, 의료 영상 분석 등이 있다.

컴퓨터가 이미지나 비디오 데이터를 이해하고 해석할 수 있도록 하는 기술분야
사람의 시각적 인식 능력을 컴퓨터 시스템에 모방하거나 재현하려는 목적을 가지고 있다.
컴퓨터 비전의 목표는 시각적 정보를 자동으로 추출, 분석 및 이해하는 것이다.

1. 객체인식(Object Recongnition)
이미지나 비디오에서 특정 객체를 인식하고 식별하는 기술
자율주행자동차에서 보행자나 도로 표지판을 인식하는 것 등

2. 얼굴인식(Face Recognition)
얼굴을 인식하고 식별하는 기술
보안시스템이나 소셜 미디어 플랫폼에서 사용된다.

3. 이미지분할(Image Segmentation)
이미지 내의 각 픽셀을 개별적인 객체나 영역을 나누는 기술이다. 
의료 영상에서 특정 조직이나 병변을 분할 하는데 사용
  이미지분할(Image Segmentation)은 이미지 처리 및 컴퓨터 비전에서 중요한 기술로,
  이미지에서 객체나 영역을 식별하고 분리하기 위해 사용된다.
  1) 객체 인식 및 검출 
    이미지 분할은 특정 객체를 인식하고 검출하는 데 필수적이다.
    자율 주행 차량에서 도로, 보행자, 차량 등을 식별하기위해 이미지 분할이 사용된다.
  2) 의료 영상 분석 
    의료 영상(MRI, CT스캔)특정 장기나 병변을 분할하여 정확한 진단 및 치료 계획을 세우는
    데 도움이 된다.
  3) 이미지 편집 및 복원 
    이미지에서 특정 영역을 선택하고 편집하는데 사용된다.
    사진에서 배경을 제거하거나 변경하는 작업에 유용하다.
  4) 장면이해
    이미지나 비디오 장면을 이해하고 분석하는데 사용된다.
    감시 시스템에서 사람이나 물체의 움직임을 추적하는 데 도움이 된다.
  5) 특징추출 및 분석
    분할된 영역을 기반으로 색상, 질감, 모양 등 다양한 특징을 추출하고 분석할 수 있다.
    패턴 인식 및 머신러닝 알고리즘에서 중요한 역할을 한다.
4. 이미지복원(Image Restoration)
손상된 이미지를 복원하거나 잡음을 제거하는 기술
5. 영상인식(Scene Understanding)
전체 이미지나 비디오 시퀀스에서의 상황이나 장면을 이해하는 기술

2. 이미지처리(Image Processing)
디지털 이미지의 개선, 복원, 분석을 위한 기술입니다. 
주요 작업으로는 노이즈 제거, 대비 향상, 경계 검출 등이 있다.

  이미지처리에서 대비 향상(contrast enhancement)과
  경계 검출(edge detection)은 이미지의 품질을 개선하고 중요한 특징을 추출하는데
  필수적인 단계이다.

  1) 대비 향상(Contrast Enhancement)
    - 시각적 품질 개선 
      대비를 향상키면 이미지의 밝은 부분과 어두운 부분간의 차이가 커져, 시각적으로 더
      명확하고 선명한 이미지를 얻을 수 있다. 이미지가 더 보기 좋고 쉽게 이해될 수 있도록
      도와준다.
    - 세부 정보 강조 
      낮은 대비의 이미지에서는 세부 정보가 흐릿하게 보일 수 있다.
      대비를 높이면 중요한 세부 정보와 특징이 더 뚜렷하게 드러나게되어 
      분석및 인식 작업이 용이해진다. 
    - 후속 처리 단계의 성능 향상 
      대비가 향상된 이미지는 후속 처리 단계, 예를 들어
      객체 인식, 경계 검출, 특징 추출 등의 정확도를 높이는 데 도움이 된다. 
      더 선명한 이미지로 부터 더 명확한 데이터를 얻을 수 있기 때문이다.

  2) 경계 검출(Edge Detection)
     - 형태 및 구조 인식
       경계는 객체의 형상과 구조를 정의하는 중요한 특징이다.  
       경계 검출을 통해 객체의 윤곽을 식별하고 이미지 내에서 각 객체를 구분할 수 있다.
     - 객체 분할
       경계 검출은 이미지 분할의 중요한 단계로, 객체를 개별적으로 분리하고 분석하는 데
       사용된다. 이는 자율 주행 차량의 도로 인식, 의료 영상에서의 장기 분할 등
       다양한 응용분야에서 필수적이다.
     - 특징 추출 및 매칭
       경계는 특징 추출 과정에서 중요한 정보로 사용된다.
       이미지 매칭, 추적, 인식 등의 알고리즘에서 객체나 패턴을 식별하는 데 도움됩니다.
     - 영상 해석 및 분석
       경계 검출은 이미지의 고수준 해석을 위한 기초 데이터로 사용된다. 
       텍스쳐 분석, 형태 분석, 물체의 위치와 방향을 파악하는 데 유용합니다.

    실질적 응용
    - 의료 영상
      병변, 장기, 조직의 경계를 시별하여 정확한 진단과 치료 계획을 수립하는 데 사용된다.
    - 자율 주행
      도로 경계, 차량, 보행자 등의 경계를 검출하여 안전한 주행을 보장한다.
    - 산업 검사 
      제퓸의 표면 결함, 크기 향상을 검사하여 품질 관리를 수행한다.
    - 보안 및 감시 
      움직임 검출 및 객체 인식을 통해 실시간 감시 시스템의 정확성을 높인다.

3. 컴퓨터 그래픽스(Computer Graphics)
디지털 콘텐츠를 생성하고 시각화하는 기술이다.
애니메이션, 게임, 시뮬레이션, 가상 현실 및 증강현실 등에 사용된다.

4. 영상분석(Video Analysis)
비디오 데이터의 해석과 분석을 다룬다. 
동작 인식, 비디오 서머리, 이벤트 감지 등이 주요 응용분야이다.

5. 패턴인식(Pattern Recognition)
이미지와 비디오에서 반복되는 패턴을 찾고 분류하는 기술이다.
머신러닝과 딥러닝과 긴밀하게 연관되어 있으며, 얼굴 인식, 문자 인식(OCR), 생체인식
등의 분야에 활용된다.

//OpenCV(Open Source Computer Vision Library)
컴퓨터 비전 관련 작업을 수행하기 위해 사용되는 오픈소스라이브러리

//Intel IPP(Integrated Performance Primitives)
고성능 이미지 처리와 신호 처리를 위한 라이브러리, 
Intel 프로세서에서 최적화된 성능을 제공

//CUDA(Compute Unified Device Architecture)
NVIDIA의 GPU에서 병렬 계산을 수행할 수 있게 해주는 플랫폼.
이미지 품질 향상 작업을 수행할 수 있으며, 대표적인 라이브러리로는 
NPP(NVIDIA Performance Primitives)가 있다.

//이미지 품질 향상을 위한 기법
1. 대비 향상(Contrast Enhancement)

- 히스토그램 평활화(Histogram Equalization)
이미지의 밝기 값을 고르게 분포시켜 대비를 향상시키는 기법이다.
OpenCV : cv2.equalizaeHist()
IPP : ippEqualizeHist()
CUDA : nppiEqualizeHist()
전체 이미지의 밝기 분포를 고르게 하여 더명확하고 균일한 이미지를 얻는다.
의료 영상, 위성 이미지 등

- 적응형 히스토그램 평활화(Adaptive Histogram Equalization, AHE)
이미지의 지역적 대비를 개선하기 위해 작언 영역마다 히스토그램 평활화를 적용한다.
OpenCV: cv2.createCLAHE()
국소적으로 대비를 조정하여 전체적인 밝기 차이가 큰 이미지에서도 세부사항을 더
잘 볼 수 있게 한다.
저조도 이미지, 야간 촬영 이미지 등

- 이미지의 최소/최대 값 기반으로 대비를 확장
IPP : ippiContrastStretch()
CUDA : nppiContrastStretch()

2. 노이즈 제거(Noise Reduction)
- 평균 필터링(Mean Filtering)
주변 픽셀 값의 평균을 계산하여 노이즈를 제거하는 기법
OpenCV : cv2.blur()
이미지가 부드러워지지만, 엣지가 흐려질 수 있다.
기본적인 노이즈 제거

- 가우시간 필터링(Gaussian Filtering)
가우시안 커널을 사용하여 노이즈를 제거
OpenCV : cv2.GaussianBlur()
IPP : ippiFilterGauss()
CUDA : nppiFilterGauss()
평균 필터보다 더 자연스러운 결과를 제공하며, 엣지가 덜 흐려진다.
다양한 노이즈 제거 작업

- 미디안 필터링(Median Filtering)
주변 픽셀 값의 중간 값을 계산하여 노이즈를 제거한다.
OpenCV : cv.medianBlur()
IPP : ippiFilterMedian()
CUDA : nppiFilterMedian()
엣지를 잘 보존하면서 소금-후추 노이즈를 효과적으로 제거
소금-후추 노이즈 효과적 제거, 엣지 보존 필터링

- 비등방성 확산(Anisotropic Diffusion)
엣지를 보존하면서 이미지의 노이즈를 줄이는 기법
OpenCV : cv2.fastNLMeansDenoising()
이미지의 세부 사항을 유지하면서 노이즈를 제거한다.
의료 영상, 과학적 이미지 처리

3. 선명화(Sharpening)
- 다양한 샤프닝 필터를 사용하여 이미지를 선명하게 만듬
IPP : ippiFilterSharpen()
CUDA : nppiFilterSharpen()

- 사용자 정의 커널을 사용하여 이미지 선명화 수행
OpenCV : cv2.filter2D()

-언샤프 마스킹(Unsharp Masking)
원본이미지에서 블러된 이미지를 빼서 세부 사항을 강조하는 기법
OpenCV : 가우시안 블러와 이미지 덧셈/뺄셈을 사용하여 구현
이미지의 세부 사항이 더욱 뚜렷하게 나타난다.
사진, 인쇄물

-라플라시안 필터(Laplacian Filter)
이미지의 이차 미분을 사용하여 엣지를 강조하는 기법
OpenCV : cv2.Laplacian()
IPP : ippiFilterLaplacian()
CUDA : nppiFilterLaplacian()
엣지를 강조하여 이미지를 선명하게 만든다.
엣지 강조, 패턴 인식

4. 복원(Restoration)
-블라인드 복원(Blind Deconvolution)
블러의 원인을 알지 못하는 상황에서 이미지 복원을 시도하는 기법
OpenCV : cv2.deconvolve()
IPP : 특정 복원 함수가 없지만, 사용자 정의 커널을 사용하여 구현 할 수 있다.
흐릿한 이미지를 복원하여 더 명확하게 만든다.
사진 복원, 천문학 이미지

-워너 필터링(Wiener Filtering)
노이즈와 블러가 알려진 조건에서 최적의 복원을 수행하는 기법이다.
신호 대 노이즈 비율을 최적화하여 이미지 복원을 수행한다.
잡음이 많은 데이터 복원

-워너 필터링 대신 노이즈 제거 수행
OpenCV : cv2.fastNlMeansDenoising()

- CUDA : 사용자 정의 복원 알고리즘을 구현 할 수 있다.

5. 해상도 향상(Resolution Enhancement)
- 다양한 보간 방법(양선형, 양입방)을 사용하여 이미지 크기 조정 수행
OpenCV : cv2.resize()
IPP : ippiResize()
CUDA : nppiResize()

-초해상도(Super-Resolution)
딥러닝 기반 슈퍼해상도 모델을 사용용 
여러 장의 저해상도 이미지를 합성하거나 단일 이미지의 해상도를 높이는 기법
OpenCV : cv2.dnn_superres.DnnSuperResImpl_create()
CUDA : 구현할 수 있다.
이미지의 해상도를 높여 더 선명한이미지를 얻을 수 있다.
영상 감시, 위성 영상

-대역 확장(Band Expansion)
주파수 영역에서 이미지의 고주파 성분을 추가하여 해상도를 개선하는 기법
고주파 성분을 추가하여 이미지의 세부 사항을 더 뚜렷하게 만든다.
영상 복원, 디지털 확대

6. 색상 보정(Color Correction)
- 색상 공간 변환을 통해 색상을 보정
OpenCV : cv2.cvtColor()
IPP : ippiConvert_8u_C3C3R()
CUDA : nppiColorConvert()

-화이트 밸런스 조정(White Balance Adjustment)
이미지의 색 균형을 조정하여 자연스러운 색상을 복원하는 기법
OpenC CV : cv2.xphoto.createSimpleWB()
이미지의 색상을 조정하여 더 자연스럽게 만든다.

-감마 보정(Gamma Correction)
감마 값을 조정하여 이미지의 밝기와 대비를 조절하는 기법
OpenCV : 이미지 배열의 각 픽셀 값에 감마 보정을 적용
IPP : ippiGammaCorrection()
CUDA : nppiGammaCorrection()
밝기와 대비를 조절하여 이미지를 더 보기 좋게 만든다.
디스플레이 보정, 사진

-컬러 매핑(Color Mapping)
특정 컬러 프로파일을 적용하여 색상을 보정하는 기법
OpenCV : cv2.applyColorMap()
색상 보정을 통해 이미지의 시각적 효과를 향상 시킴
열화상, 과학적 시각화

7. 모양 보정(Shape Correction)
- 왜곡 보정(Distortion Correction)
렌즈 왜곡이나 기하학적 왜곡을 보정하는 기법
OpenCV : 카메라 켈리브레이션 함수인 cv2.undistort()
왜곡된 이미지를 보정하여 실제 형태에 가깝게 만든다.
사진, 비디오 촬영

- 퍼스펙티브 보정(Perspective Correction)
이미지의 원근 왜곡을 보정하여 평행을 맞추는 기법이다.
OpenCV : cv2.getPerspectiveTransform(), cv2.warpPerspective()
원근 왜곡을 제거하여 더 정확한 형상을 얻을 수 있다.
건축 사진, 문서 스캔

8. 기타 기법
- 이미지 보간(Image Interpolation)
이미지의 해상도를 변경하거나 크기를 조정할 때 사용되는 기법
OpenCV : cv2.resize(), 양선형/양입방/영역보간 등 선택
이미지를 확대 하거나 축소할 때 품질을 유지한다. 
해상도 조정, 디지털 줌

- 스타일 전이(Style Transfer)
한 이미지의 스타일을 다른 이미지에 적용하여 예술적 효과를 만드는 기법 
OpenCV : 딥러닝 모델을 사용하여 스타일 전이를 수행한다.
이미지의 예술적 스타일을 변화시킨다.
예술 창작, 필터 적용

- 딥러닝 기반 품질 향상
Convolutional Neural Networks(CNN) 등을 이용하여 다양한 품질 향상 작업을 수행
OpenCV : 딥러닝 모델을 로드하고 추론하는 기능을 제공
이미지 슈퍼 해상도, 노이즈 제거, 복원 등의 작업을 수행한다.
고급 이미지 처리, 최신 컴퓨터 비전 응용
